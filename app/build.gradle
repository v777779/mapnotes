plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'dagger.hilt.android.plugin'
    id("androidx.navigation.safeargs.kotlin")
    id 'com.google.gms.google-services'                                        // firebase
    id 'com.google.firebase.crashlytics'                                    // crashlytics
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'    // maps
    id 'kotlin-kapt'
}

android {
    namespace 'ru.vpcb.map.notes'
    compileSdk 33

    defaultConfig {
        applicationId "ru.vpcb.map.notes"
        minSdk 24
        targetSdk 33
        versionCode 101
        versionName "1.0.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // local_analytics
        buildConfigField("String", "WEB_CLIENT_ID", '"YOUR_WEB_CLIENT_ID"')
        buildConfigField("String", "UNSPLASH_API_KEY", '"YOUR_UNSPLASH_API_KEY"')
        manifestPlaceholders.mapsApiKey = "YOUR_MAP_API_KEY"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        dataBinding true
        buildConfig true
    }
    // apk
    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "mn_${buildType.name}_v${defaultConfig.versionCode}.apk"
        }
    }
    // room export schema   attention use += for hilt
    defaultConfig {
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    // room migration testing
    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }
}
// room export schema
task copySchemas(type: Copy) {
//    project.logger.lifecycle( "console log")
    from "$rootDir/app/schemas/${android.defaultConfig.applicationId}.data.local.NoteDb"
    into "$rootDir/app/src/main/assets/schemas"
}

tasks.whenTaskAdded { task ->
    switch (task.name) {
        case 'mergeDebugAssets':
            task.dependsOn(':app:copySchemas')
            break
    }
}
dependencies {

    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.6.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.6.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    // activity provider
    implementation 'androidx.activity:activity-ktx:1.7.2'   // 1.5.1 for sdk32
    implementation 'androidx.preference:preference-ktx:1.2.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'androidx.core:core-splashscreen:1.0.1'
    implementation("androidx.security:security-crypto-ktx:1.1.0-alpha06")

    // timber
    implementation 'com.jakewharton.timber:timber:5.0.1'
    // hilt
    implementation("com.google.dagger:hilt-android:2.44.2")
    kapt("com.google.dagger:hilt-android-compiler:2.44.2")
    // room
    implementation("androidx.room:room-runtime:2.5.1")
//    annotationProcessor("androidx.room:room-compiler:2.5.1")
    kapt("androidx.room:room-compiler:2.5.1")
    implementation("androidx.room:room-ktx:2.5.1")
    // paging
    implementation "androidx.paging:paging-runtime:3.1.1"
    testImplementation "androidx.paging:paging-common:3.1.1"
    implementation("androidx.room:room-paging:2.5.1")
    // retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation "com.squareup.retrofit2:converter-moshi:2.9.0"
    // moshi
    implementation("com.squareup.moshi:moshi:1.14.0")
    kapt("com.squareup.moshi:moshi-kotlin-codegen:1.14.0")
    // okHttp
    implementation(platform("com.squareup.okhttp3:okhttp-bom:4.10.0"))
    implementation("com.squareup.okhttp3:okhttp")
    implementation("com.squareup.okhttp3:logging-interceptor")
    // glide
    implementation 'com.github.bumptech.glide:glide:4.15.1'
    kapt 'com.github.bumptech.glide:compiler:4.15.1'

    // firebase
    implementation platform('com.google.firebase:firebase-bom:32.0.0')
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation 'com.google.firebase:firebase-firestore-ktx'
    implementation 'com.google.firebase:firebase-database-ktx'
    implementation 'com.google.firebase:firebase-storage-ktx'
    implementation 'com.firebaseui:firebase-ui-storage:7.2.0'

    // play services
    implementation 'com.google.android.gms:play-services-auth:20.0.0'            // onetap
    implementation 'com.google.android.gms:play-services-location:21.0.1'        // location
    implementation 'com.google.android.gms:play-services-maps:18.1.0'            // maps

    implementation 'androidx.work:work-runtime-ktx:2.8.1'
}
// hilt allow references to generated code
kapt {
    correctErrorTypes = true
}